// npm init
// npm install prompt-sync
// npm install body-parser
// npm install express
// npm install mongoose
// npm install -g nodemon
// install MongoDb Compass


/*
    - npm init -y: create package.json --> setting up a new Node.js

    - body-parser: is a middleware used in Express to read and parse incoming request data

    - mongoose: promise-based object data modeling (ODM) library for the Node.js framework,
        and it is modole in npm has a lot of functionality to intercat with DB (NoSQL)

    - MongoDB Compass: is a graphical user interface (GUI) has a lot of features 
        like databases visually, store data in collection

    - MongoDB Atlas:  is a fully managed cloud database service that enables
        users to easily deploy, manage, and scale MongoDB databases.

    - The cloud is like using a service or storing data online instead
        of on your own computer. You can access it from anywhere with the internet.
    
    - Note: the data store in DB as BSON format (like JSON format)

    - Nodemon is a tool that automatically restarts your Node.js server
        whenever you make changes to your code.
    
        "you should be installed globally can be used from 
        anywhere in my system not just within a specific project"
    
    - Postman: is tool used to test APIS By sending HTTP Request to APIs
*/



// Life Cycle Transfer the Data to DB:
/*
    To store user data in MongoDB you need to:
        - Create a API to handle requests that come from Postman --> use Express
        - Send Request with Postman to API that created
        - API send data to DB

    In Details in API:
        The API contains routes (like GET, POST, PUT, DELETE) to handle different types of requests.
        Use PostMan to send request Database:
            "http://localhost:3000/post"
            "http://localhost:3000/get"
            "http://localhost:3000/put"
            "http://localhost:3000/patch"
*/


https://medium.com/@tomorchandraroy884/how-to-connect-mongodb-with-node-js-using-mongoose-a0c772dfb1ca


// More Concepts
/*
    - Schema: Defines the structure of the data (fields and types).
    - Model: Represents a collection in the database and provides
        methods to interact with it.
    - Collection: The group of documents (data) in the database
        (created automatically by Mongoose using the model).
*/


